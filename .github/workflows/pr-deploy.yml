name: PR Deployment

on:
  pull_request:
    types: [opened, synchronize, closed]

jobs:
  deploy:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/myapp:pr-${{ github.event.number }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/myapp:pr-${{ github.event.number }}

      - name: Install SSH Key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          ssh $SERVER_USER@$SERVER_IP <<EOF
            docker pull ${{ secrets.DOCKER_USERNAME }}/myapp:pr-${{ github.event.number }}
            docker stop myapp-pr-${{ github.event.number }} || true
            docker rm myapp-pr-${{ github.event.number }} || true
            docker run -d --name myapp-pr-${{ github.event.number }} -p 300${{ github.event.number }}:3000 ${{ secrets.DOCKER_USERNAME }}/myapp:pr-${{ github.event.number }}
            /usr/local/bin/manage_certbot.sh pr-${{ github.event.number }}.kaspaar.de create
          EOF

  cleanup:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest

    steps:
      - name: Install SSH Key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Clean up deployment
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          ssh $SERVER_USER@$SERVER_IP <<EOF
            docker stop myapp-pr-${{ github.event.number }}
            docker rm myapp-pr-${{ github.event.number }}
            /usr/local/bin/manage_certbot.sh pr-${{ github.event.number }}.kaspaar.de delete
          EOF
